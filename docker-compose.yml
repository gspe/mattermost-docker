postgresql:
  build: postgresql
  volumes:
    - ./volumes/db/var/lib/postgresql/data:/var/lib/postgresql/data
    - /etc/localtime:/etc/localtime:ro
  # uncomment the following to enable backup
  #environment:
  #  - AWS_ACCESS_KEY_ID=XXXX
  #  - AWS_SECRET_ACCESS_KEY=XXXX
  #  - WALE_S3_PREFIX=s3://BUCKET_NAME/PATH
  #  - AWS_REGION=us-east-1

mattermost:
  build: mattermost
  links:
    - postgresql:db
  volumes:
    - ./volumes/app/mattermost/config:/mattermost/config:rw
    - ./volumes/app/mattermost/data:/mattermost/data:rw
    - /etc/localtime:/etc/localtime:ro

nginx:
  build: nginx
  links:
    - letsencrypt
    - rocketchat:app_to_proxy
  environment:
    - MY_DOMAIN_NAME=chat.example.com
    - LETSENCRYPT_IP=letsencrypt
    - LETSENCRYPT_PORT_80=80
    - LETSENCRYPT_PORT_443=443
    - APPLICATION_IP=app_to_proxy
    - APPLICATION_PORT=80
  mem_limit: 2g
  cpu_shares: 256
  # restart: always
  ports:
    - "80:80"
    - "443:443"
  volumes_from:
    - letsencrypt

letsencrypt:
  image: quay.io/letsencrypt/letsencrypt:latest
  command:  bash -c "sleep 6 && certbot certonly --standalone -d chat.example.com --text --agree-tos --email user@chat.example.com --server https://acme-v01.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --renew-by-default --standalone-supported-challenges http-01"
  entrypoint: ""
  volumes:
    - /etc/letsencrypt
    - /var/lib/letsencrypt
  ports:
    - "80"
    - "443"
  environment:
    - TERM=xterm
